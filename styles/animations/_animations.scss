/**** 

08 - ANIMATIONS 

****/

/* FADE IN ELEMENTS */
h1 {
  &.fade-element {
    transition-delay: 0.75s;
    transition: 0.75s cubic-bezier(0.215, 0.61, 0.355, 1);
    opacity: 0;
    transform: translateY(50px);
  }
  &.inView {
    opacity: 1;
    transform: translateY(0px);
  }
}
h2 {
  &.fade-element {
    transition-delay: 0.4s;
    transition: 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);
    opacity: 0;
    transform: translateY(65px);
  }
  &.inView {
    opacity: 1;
    transform: translateY(0px);
  }
}
h3 {
  &.fade-element {
    transition-delay: 0.5s;
    transition: 0.5s cubic-bezier(0.215, 0.61, 0.355, 1);
    opacity: 0;
    transform: translateY(75px);
  }
  &.inView {
    opacity: 1;
    transform: translateY(0px);
  }
}
h4 {
  &.fade-element {
    transition-delay: 0.75s;
    transition: 0.75s cubic-bezier(0.215, 0.61, 0.355, 1);
    opacity: 0;
    transform: translateY(90px);
  }
  &.inView {
    opacity: 1;
    transform: translateY(0px);
  }
}
p {
  &.fade-element {
    transition-delay: 1s;
    transition: 1s cubic-bezier(0.215, 0.61, 0.355, 1);
    opacity: 0;
    transform: translateY(100px);
  }
  &.inView {
    opacity: 1;
    transform: translateY(0px);
  }
}
button {
  &.fade-element {
    transition-delay: 1.25s;
    transition: 1.25s cubic-bezier(0.215, 0.61, 0.355, 1);
    opacity: 0;
    transform: translateY(100px);
  }
  &.inView {
    opacity: 1;
    transform: translateY(0px);
  }
}
li {
  &.fade-element {
    transition-delay: 0.5s;
    transition: 0.5s cubic-bezier(0.215, 0.61, 0.355, 1);
    opacity: 0;
    transform: translateY(200px);
  }
  &.inView {
    opacity: 1;
    transform: translateY(0px);
  }
}
.line {
  &.fade-element {
    transition-delay: 1s;
    transition: 1s cubic-bezier(0.215, 0.61, 0.355, 1);
    opacity: 0;
    transform: translateY(200px);
  }
  &.inView {
    opacity: 1;
    transform: translateY(0px);
  }
}

.slideinup {
  animation: slideInUp 0.8s;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

.slideoutdown {
  animation: slideOutDown 0.8s;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

.slideawayup {
  animation: slideAwayUp 1s;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

.slideawaydown {
  animation: slideAwayDown 1s;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

.moveupdown {
  animation: moveupdown 2s infinite;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideAwayUp {
  0% {
    transform: translateY(0);
    transform-origin: top center;
  }
  100% {
    transform: translateY(-75%);
  }
}

@keyframes slideAwayDown {
  0% {
    transform: translateY(75%);
    transform-origin: bottom center;
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes slideInUp {
  0% {
    transform: translateY(100%);
    transform-origin: bottom center;
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes slideOutDown {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-100%);
    transform-origin: top center;
  }
}

@keyframes moveupdown {
  0% {
    transform: translateY(-2em);
    opacity: 0;
  }
  75% {
    transform: translateY(-1em);
    opacity: 1;
  }
  100% {
    transform: translateY(0);
    opacity: 0;
  }
}

/* COUNTER ONE - FROM 0 TO 100 */
@property --num {
  syntax: "<integer>";
  initial-value: 100;
  inherits: false;
}

.counter_one {
  animation: counter 5s alternate ease-in-out;
  counter-reset: num var(--num);
}
.counter_one::after {
  content: counter(num);
}

/* COUNTER TWO - FROM 0 TO 61 */
@property --num-second {
  syntax: "<integer>";
  initial-value: 61;
  inherits: false;
}

.counter_two {
  animation: counter 5s alternate ease-in-out;
  counter-reset: numsecond var(--num-second);
}
.counter_two::after {
  content: counter(numsecond);
}

/* COUNTER THREE - FROM 0 TO 43 */
@property --num-third {
  syntax: "<integer>";
  initial-value: 43;
  inherits: false;
}

.counter_three {
  animation: counter 5s alternate ease-in-out;
  counter-reset: numthird var(--num-third);
}
.counter_three::after {
  content: counter(numthird);
}

@keyframes counter {
  from {
    --num: 0;
    --num-second: 0;
    --num-third: 0;
  }
  to {
    --num: 100;
    --num-second: 61;
    --num-third: 43;
  }
}
